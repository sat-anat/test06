name: Extract cards CSV (fast)

on:
  workflow_dispatch:
    inputs:
      base_url:
        description: "スクショウ計算機のベースURL（末尾/推奨）"
        type: string
        required: false
        default: "https://asmape0104.github.io/scshow-calculator/"
      out_name:
        description: "出力CSVファイル名（アーティファクト名にも使用）"
        type: string
        required: false
        default: "cards.csv"
      workers:
        description: "並列取得ワーカー数"
        type: string
        required: false
        default: "8"
      commit_to_repo:
        description: "生成したCSVをリポジトリにコミットする"
        type: boolean
        required: false
        default: false
      commit_branch:
        description: "コミット先ブランチ（新規作成可）"
        type: string
        required: false
        default: "data"
      commit_path:
        description: "コミット先パス（例: data/cards.csv）"
        type: string
        required: false
        default: "data/cards.csv"

permissions:
  contents: write  # 最小権限でコミット可。手動実行時はOK（フォークPRは read になる点に留意）[6](https://zero-plus.io/media/how-to-page-screenshot/)[7](https://www.luft.co.jp/cgi/web-calculator.php)

concurrency:
  group: extract-cards-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run-extract:
    name: Run extractor (cached & parallel)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4  # ワークフロー実行用にリポジトリを展開 [8](https://rakko.tools/tools/125/)

      # HTTP レスポンスキャッシュ（requests-cache のDBを保存）
      - name: Cache HTTP responses
        uses: actions/cache@v4
        with:
          path: .requests_cache
          # base_url と extract.py の内容でキーを分離。URLに/等が入っても問題なくキー化できます。
          key: http-cache-${{ runner.os }}-${{ inputs.base_url }}-${{ hashFiles('extract.py') }}
          restore-keys: |
            http-cache-${{ runner.os }}-${{ inputs.base_url }}-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"  # pip 依存を自動キャッシュ [3](https://ametama-sdvx.hatenablog.com/entry/2025/05/29/204137)

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run extractor
        env:
          BASE_URL: ${{ inputs.base_url }}
          OUT_NAME: ${{ inputs.out_name }}
          WORKERS: ${{ inputs.workers }}
        run: |
          echo "[info] base_url=$BASE_URL"
          echo "[info] workers =$WORKERS"
          python extract.py --base-url "$BASE_URL" --out "$OUT_NAME" --workers "$WORKERS"

      # 既存ブランチ上の同一パスと差分比較（差分なしなら以降の upload/commit をスキップ）
      - name: Check diff with repo target (optional)
        id: diff
        if: ${{ inputs.commit_to_repo == true }}
        run: |
          set -e
          CHANGED="true"
          # ブランチが存在すれば対象ファイルを取得して比較
          if git ls-remote --exit-code --heads origin "${{ inputs.commit_branch }}"; then
            git fetch --depth=1 origin "${{ inputs.commit_branch }}"
            # 既存ファイルがある場合のみ比較
            if git cat-file -e "origin/${{ inputs.commit_branch }}:${{ inputs.commit_path }}" 2>/dev/null; then
              git show "origin/${{ inputs.commit_branch }}:${{ inputs.commit_path }}" > .old.csv
              if diff -q ".old.csv" "${{ inputs.out_name }}" >/dev/null; then
                CHANGED="false"
              fi
            fi
          fi
          echo "changed=${CHANGED}" >> "$GITHUB_OUTPUT"

      - name: Upload artifact (skip if unchanged & committing)
        if: ${{ inputs.commit_to_repo != true || steps.diff.outputs.changed == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.out_name }}
          path: ${{ inputs.out_name }}
          if-no-files-found: error
          retention-days: 30
        # v4 は高速化・即時参照などの改良版です。[4](https://www.dospara.co.jp/tfc-pc-how-to-screenshot.html)[5](https://freesoft-100.com/pasokon/capture.html)

      - name: Commit to repository (only when changed)
        if: ${{ inputs.commit_to_repo == true && steps.diff.outputs.changed == 'true' }}
        run: |
          set -eux
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 既存ブランチなら取得、なければ新規作成
          if git ls-remote --exit-code --heads origin "${{ inputs.commit_branch }}"; then
            git fetch origin "${{ inputs.commit_branch }}":"${{ inputs.commit_branch }}"
            git switch "${{ inputs.commit_branch }}"
          else
            git switch -c "${{ inputs.commit_branch }}"
          fi

          mkdir -p "$(dirname "${{ inputs.commit_path }}")"
          cp "${{ inputs.out_name }}" "${{ inputs.commit_path }}"

          git add "${{ inputs.commit_path }}"
          git commit -m "chore(data): update cards CSV ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
          git push origin "HEAD:${{ inputs.commit_branch }}"

      - name: No changes summary
        if: ${{ inputs.commit_to_repo == true && steps.diff.outputs.changed != 'true' }}
        run: echo "No changes detected; skipped artifact upload & commit."
